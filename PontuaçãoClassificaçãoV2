import pymysql

class ArcheryScoreManager:
    def __init__(self):
        self.scores = []

    def register_score(self, score):
        self.scores.append(score)

    def apply_penalty(self):
        if self.scores:
            max_score = max([s for s in self.scores if isinstance(s, int)])
            for i in range(len(self.scores)):
                if self.scores[i] == max_score:
                    self.scores[i] = 'M'
                    break

    def display_scores(self):
        for i, score in enumerate(self.scores, start=1):
            print(f"Flecha {i}: {score}")

    def calculate_total_score(self):
        return sum(s for s in self.scores if isinstance(s, int))

    def collect_scores_from_user(self, num_arrows):
        print(f"Insira a pontuação de cada uma das {num_arrows} arrows:")
        for i in range(num_arrows):
            while True:
                try:
                    score = int(input(f"Pontuação da flecha {i + 1}: "))
                    if not (0 <= score <= 10):
                        raise ValueError("a pontuação deve estar entre 0 e 10")
                    break
                except ValueError as e:
                    print(f"Input invalido: {e}. Tente novamente.")
            self.register_score(score)

    def apply_red_cards(self):
        response = input("\nO atleta recebeu cartão vermelho? (s/n): ").strip().lower()
        if response == 's':
            while True:
                try:
                    num_red_cards = int(input("Quantos cartões vermelhos o atleta recebeu? "))
                    if num_red_cards < 0:
                        raise ValueError("O numero de cartões vermelhos não pode ser negativo.")
                    break
                except ValueError as e:
                    print(f"Input invalido: {e}. Tente novamente.")
            for _ in range(num_red_cards):
                self.apply_penalty()

    def store_final_score_in_database(self, final_score):
        try:
            connection = pymysql.connect(
                host="mysql-2480cbc6-iesb-pi2a2024.h.aivencloud.com",
                port=22150,
                user="avnadmin",
                password="AVNS_FhpJunTAM7Hz3pU4pIM",
                db="defaultdb",
                charset="utf8mb4",
                cursorclass=pymysql.cursors.DictCursor
            )
            with connection.cursor() as cursor:
                sql = "INSERT INTO classificacao (soma_final) VALUES (%s)"
                cursor.execute(sql, (final_score,))
            connection.commit()
            print("Pontuação enviada com sucesso.")
        except pymysql.Error as e:
            print(f"Erro ao enviar pontuação: {e}")
        finally:
            connection.close()


if __name__ == "__main__":
    archery_manager = ArcheryScoreManager()
    num_arrows = 72
    
    archery_manager.collect_scores_from_user(num_arrows)
    
    print("\nPontuações registradas:")
    archery_manager.display_scores()
    
    initial_total_score = archery_manager.calculate_total_score()
    print(f"Pontuação total antes das penalidades: {initial_total_score}")
    
    archery_manager.apply_red_cards()
    
    print("\nPontuações após aplicação de penalidades:")
    archery_manager.display_scores()
    
    final_total_score = archery_manager.calculate_total_score()
    print(f"Pontuação total após aplicação de penalidades: {final_total_score}")
    
    archery_manager.store_final_score_in_database(final_total_score)
